name: Build and Push to Amazon ECR

on: [push]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - run: echo "Checkout source code"
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Verify AWS CLI Installation
        run: aws --version

      - name: Test AWS CLI Configuration
        run: aws sts get-caller-identity --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 2: Log in to Amazon ECR
      - name: Prepare AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 3: Build the Docker image
      - run: echo "Build Docker image"
      - name: Build Docker image
        run: |
          docker build -t exchangerate-react:react .
          docker tag exchangerate-react:react 741448956915.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/er/exchangerate-react:react

      # Step 4: Push the Docker image to Amazon ECR
      - run: echo "Push Docker image to Amazon ECR"
      - name: Push Docker image to Amazon ECR
        run: |
          docker push 741448956915.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/er/exchangerate-react:react
      - run: echo "Complete"
      # Step 5: Deploy to Amazon ECS
      # below code is working
      # - name: Deploy to Amazon ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: .github/workflows/ecs-task-from-ecr.json
      #     service: ecs-service
      #     cluster: ECS-exchange-rate-wei
      #     wait-for-service-stability: true

      # Step 6: Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }} # EC2 public IP or DNS
          username: ec2-user # EC2 username
          key: ${{ secrets.SSH_PRIVATE_KEY }} # Private key for SSH
          script: |
            # Log in to ECR
            aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 741448956915.dkr.ecr.ap-southeast-2.amazonaws.com

            # Pull the latest image
            docker pull 741448956915.dkr.ecr.ap-southeast-2.amazonaws.com/er/exchangerate-react:react

            # Stop and remove the existing container
            docker stop react-app || true
            docker rm react-app || true

            # Run the new container
            docker run -d --name react-app -p 80:80 741448956915.dkr.ecr.ap-southeast-2.amazonaws.com/er/exchangerate-react:react
